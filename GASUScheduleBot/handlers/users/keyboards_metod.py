from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.types import ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils import executor
from loader import dp, storage
from aiogram.types.web_app_info import WebAppInfo
from filters.user_filter import IsUser
from filters import IsAdmin, IsModer
from aiogram.dispatcher import FSMContext
from utils.db_api.db_gino import db
from utils.db_api.models.user import User
from utils.db_api.models.schedule_group_type_day import ScheduleGroupLessonsNew, AcademicGroup

URL_FACULTY = [
                    ["—Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π —Ñ–∞–∫—É–ª—å—Ç–µ—Ç", "Instagramm: https://instagram.com/sfgasu/", "–í–ö–æ–Ω—Ç–∞–∫—Ç–µ: https://vk.com/sfgasu"],
                    ["–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π —Ñ–∞–∫—É–ª—å—Ç–µ—Ç", "Instagramm: https://instagram.com/afgasu/", "–í–ö–æ–Ω—Ç–∞–∫—Ç–µ: https://vk.com/afgasu"],
                    ["—Ñ–∞–∫—É–ª—å—Ç–µ—Ç —ç–∫–æ–Ω–æ–º–∏–∫–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", "Instagramm: https://instagram.com/feu_spbgasu/", "–í–ö–æ–Ω—Ç–∞–∫—Ç–µ: https://vk.com/feu_spbgasu"],
                    ["—Ñ–∞–∫—É–ª—å—Ç–µ—Ç –∏–Ω–∂–µ–Ω–µ—Ä–Ω–æ–π —ç–∫–æ–ª–æ–≥–∏–∏ –∏ –≥–æ—Ä–æ–¥—Å–∫–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞", "Telegram: https://t.me/fieigh"],
                    ["–∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω–æ-–¥–æ—Ä–æ–∂–Ω—ã–π —Ñ–∞–∫—É–ª—å—Ç–µ—Ç", "Instagramm: https://instagram.com/adf_spbgasu/", "–í–ö–æ–Ω—Ç–∞–∫—Ç–µ: https://vk.com/adf_gasu"],
                    ["—Ñ–∞–∫—É–ª—å—Ç–µ—Ç —Å—É–¥–µ–±–Ω—ã—Ö —ç–∫—Å–ø–µ—Ä—Ç–∏–∑ –∏ –ø—Ä–∞–≤–∞ –≤ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–µ –∏ –Ω–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ", "Instagramm: https://instagram.com/fseipst_gasu/", "–í–ö–æ–Ω—Ç–∞–∫—Ç–µ: https://vk.com/fseipst"]
              ]

@dp.message_handler(IsUser(), state="*", content_types=types.ContentTypes.ANY)
async def get_text_messages(msg: types.Message):
    if msg.text == 'üóì–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
        await msg.answer('‚ÑπÔ∏è–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n\nüì≤ /today - –†–∞—Å—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è'
                         '\nüì≤ /tomorrow - –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞'
                         '\nüì≤ /week - –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é'
                         '\nüì≤ /selectschedule - –í—ã–±–æ—Ä –Ω—É–∂–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –ª—é–±–æ–π –¥–µ–Ω—å —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫')

    elif msg.text == 'üó∫–ö–∞—Ä—Ç–∞ –°–ü–±–ì–ê–°–£':
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton("–ö–∞—Ä—Ç–∞ –°–ü–±–ì–ê–°–£", web_app=WebAppInfo(url=f"https://map.spbgasu.ru")))
        await msg.answer(text=f"–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –∫–∞–±–∏–Ω–µ—Ç—ã –Ω–∞ –∫–∞—Ä—Ç–µ –Ω–µ –≤—ã—Ö–æ–¥—è –∏–∑ Telegram!",
                             reply_markup=markup)


    elif msg.text == 'üåê–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏':
        from_chat_id = msg.from_user.id
        curr_user = await User.get(int(from_chat_id))
        faculty_name_qure = await db.select([db.func.distinct(AcademicGroup.faculty)]).where(
            AcademicGroup.name == curr_user.group).gino.all()
        faculty_name = list(map(lambda x: str(x[0]), faculty_name_qure))

        text_for_msg = ""
        for facult in URL_FACULTY:
            if facult[0] == faculty_name[0]:
                for cur_url in facult:
                    text_for_msg += cur_url + "\n\n"
                break


        await msg.answer(f'üåê–í—Å–µ —Å–æ—Ü—Å–µ—Ç–∏ –¥–ª—è –≤–∞—à–µ–≥–æ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞!üåê\n\n{text_for_msg}')

    else:
        await msg.answer(text=f"–Ø –ø–æ–Ω–∏–º–∞–Ω–∏—é —Ç–æ–ª—å–∫–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã.\n"
                             f"–î–ª—è —Å–ø—Ä–∞–≤–∫–∏ –Ω–∞–∂–º–∏ —Å—é–¥–∞ - /help.")


